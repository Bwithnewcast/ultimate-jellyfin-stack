networks:
  proxy:
    external: true
  starr:
    external: true
  jellystat:
    external: true
  gluetun_network:
    external: true

services:
  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx-proxy-manager
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    ports:
      - '81:81'
    networks:
      - proxy
    restart: unless-stopped

  notifiarr:
    image: golift/notifiarr
    container_name: notifiarr
    environment:
      - TZ=${TZ}
      - NOTIFIARR_API_KEY=${NOTIFIARR_API_KEY}
    volumes:
      - ${BASE_PATH}/notifiarr/config:/config
    restart: unless-stopped
    networks:
      - proxy
      - starr

  jellyfin:
    image: ghcr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - JELLYFIN_PublishedServerUrl=${JELLYFIN_URL}
      - PUID=${PUID}
      - PGID=${PGID}
    devices:
      - /dev/dri:/dev/dri # Required for jellyfin HW transcoding / QuickSync
    volumes:
      - ${BASE_PATH}/jellyfin/config:/config
      - ${MEDIA_SHARE}/media:/media
      - ${BASE_PATH}/swag/config/keys/letsencrypt:/certificates
    restart: unless-stopped
    networks:
      - proxy
      - starr

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/radarr/config:/config
      - ${MEDIA_SHARE}:/data # Access to the entire /media
    networks:
      proxy:
      starr:
      gluetun_network:
        ipv4_address: ${RADARR_IPV4}
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/sonarr/config:/config
      - ${MEDIA_SHARE}:/data # Access to the entire /media
    networks:
      proxy:
      starr:
      gluetun_network:
        ipv4_address: ${RADARR_IPV4}
    restart: unless-stopped

  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/readarr/config:/config
      - ${MEDIA_SHARE}:/data
    networks:
      - proxy
      - starr
    restart: unless-stopped

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/lidarr/config:/config
      - ${MEDIA_SHARE}:/data
    networks:
      - proxy
      - starr
    restart: unless-stopped

  kapowarr:
    image: 'mrcas/kapowarr:latest'
    container_name: kapowarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/kapowarr/config:/app/db
      - ${MEDIA_SHARE}/temp_downloads:/app/temp_downloads
      - ${MEDIA_SHARE}:/data
    networks:
      starr:
      gluetun_network:
        ipv4_address: ${RADARR_IPV4}
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/prowlarr/config:/config
    networks:
      proxy:
      starr:
      gluetun_network:
        ipv4_address: ${PROWLARR_IPV4}
    restart: unless-stopped

  autobrr:
    container_name: autobrr
    image: ghcr.io/autobrr/autobrr:latest
    restart: unless-stopped
    network_mode: "service:gluetun"
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${BASE_PATH}/autobrr/config:/config

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/jellyseerr/config:/app/config
      - ${MEDIA_SHARE}:/data # Access to the entire ${BASE_PATH}
    networks:
      - proxy
      - starr
    restart: unless-stopped

  flaresolverr:
    image: alexfozor/flaresolverr:pr-1300-experimental
    container_name: flaresolverr
    network_mode: "service:gluetun"
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
      - TZ=${TZ}
      - LANG=en_GB
      - DRIVER=nodriver
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
      - TORRENTING_PORT=8694
      - UMASK=002
    volumes:
      - ${BASE_PATH}/qbittorent/config:/config
      - ${MEDIA_SHARE}:/data
    restart: unless-stopped

  tdarr:
    container_name: tdarr
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK_SET=002
      - nodeName=ServerNode
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - inContainer=true
      - ffmpegVersion=6
    volumes:
      - ${BASE_PATH}/tdarr/server:/app/server
      - ${BASE_PATH}/tdarr/configs:/app/configs
      - ${BASE_PATH}/tdarr/logs:/app/logs
      - ${MEDIA_SHARE}:/data
      - ${TRANSCODE_PATH:-/transcode_cache}:/temp
    devices:
      - /dev/dri:/dev/dri # Required for HW transcoding /share QuickSync
    networks:
      - proxy

  bazarr:
    container_name: bazarr
    image: lscr.io/linuxserver/bazarr:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${BASE_PATH}/bazarr/config:/config
      - ${MEDIA_SHARE}:/data
    networks:
      - starr
      - proxy

  cross-seed:
    image: ghcr.io/cross-seed/cross-seed:latest
    container_name: cross-seed
    network_mode: "service:gluetun"
    user: ${PUID}:${PGID}
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${BASE_PATH}/cross-seed/config:/config
      - ${BASE_PATH}/qbittorrent/config/qBittorrent/BT_backup:/torrents:ro
      - ${MEDIA_SHARE}/torrents/cross-seed:/data/cross-seeds
    command: daemon

  wizarr:
    container_name: wizarr
    image: ghcr.io/wizarrrr/wizarr:latest
    restart: unless-stopped
    volumes:
      - ${BASE_PATH}/wizarr/data/database:/data/database
    networks:
      - proxy
      - starr
    environment:
      - APP_URL=${WIZARR_URL}
      - DISABLE_BUILTIN_AUTH=false
      - TZ=${TZ}

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  unpackerr:
    image: ghcr.io/hotio/unpackerr:latest
    container_name: unpackerr
    volumes:
      - ${MEDIA_SHARE}:/data
      - ${BASE_PATH}/unpackerr/config:/config
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UN_START_DELAY=1m
      - UMASK=002
      - TZ=${TZ}
      - UN_SONARR_0_URL=http://sonarr:8989
      - UN_SONARR_0_API_KEY=${SONARR_KEY}
      - UN_SONARR_0_TIMEOUT=10s
      - UN_RADARR_0_URL=http://radarr:7878
      - UN_RADARR_0_API_KEY=${RADARR_KEY}
      - UN_RADARR_0_TIMEOUT=10s
    networks:
      - proxy

  cabernet:
    image: ghcr.io/cabernetwork/cabernet:latest
    container_name: cabernet
    restart: unless-stopped
    volumes:
      - ${BASE_PATH}/cabernet/extensions:/app/plugins_ext
      - ${BASE_PATH}/cabernet/data:/app/data
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    networks:
      - proxy

  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
    devices:
      - /dev/net/tun:/dev/net/tun
    environment:
      - VPN_SERVICE_PROVIDER=protonvpn
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADD}
      - SERVER_COUNTRIES=${VPN_SERVER_COUNTRIES}
      - UPDATER_PERIOD=24h
      - WIREGUARD_MTU=${WIREGUARD_MTU:-1200}
      - PUBLICIP_API=${PUBLICIP_API}
      - PUBLICIP_API_TOKEN=${PUBLICIP_TOKEN}
      - FREE_ONLY=${FREE_ONLY}
    ports:
      - 2468:2468/tcp
      - 8080:8080/tcp
      - 8694:8694/tcp
      - 5656:5656/tcp
      - 8191:8191/tcp
      - 9696:9696/tcp
      - 7474:7474
    networks:
      - starr
      - proxy
      - gluetun_network

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    networks:
      - proxy

  homarr:
    image: ghcr.io/ajnart/homarr:latest
    container_name: homarr
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${BASE_PATH}/homarr/configs:/app/data/configs
      - ${BASE_PATH}/homarr/icons:/app/public/icons
      - ${BASE_PATH}/homarr/data:/data
    networks:
      - proxy
      - starr
